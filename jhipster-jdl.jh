
entity Proveedor {
	nombre String required,
	contacto String required,
    correoElectronico String,
    telefono String,
    celular String, 
    sitioWeb String,
    direccion String
}

enum EstadoDeProducto {
	ACTIVO, INACTIVO
}

entity PresentacionDeProducto {
	nombre String required
}

entity Producto {
	sku Long required min(1),
	nombre String required,
    precioDeVenta Double required min(0),
    precioDeVenta2 Double required min(0),
    precioDeVenta3 Double required min(0),
    precioDeCosto Double required min(0),
    unidadesEnStock Integer required min(0),
	estado EstadoDeProducto required,
    minimoEnExistencia Integer required min(0)
}

enum EstadoDeOrdenDeCompra {
	ACTIVA, EMITIDA, CANCELADA, CERRADA
}

enum RecibidoOrdenDeCompra {
	NO_RECIBIDO, PARCIAL, TOTAL
}

entity OrdenDeCompra {
	numeroDeReferencia String required,
    fecha LocalDate required,
    total Double min(0),
    fechaDeEntregaEsperada LocalDate required,
    estado EstadoDeOrdenDeCompra required,
    recibido RecibidoOrdenDeCompra required
}

entity DetalleDeCompra { 
	cantidad Integer required,
    precio Double required min(0),
    subTotal Double required min(0)
}

enum TipoDeRecepcionDeCompra {
	TOTAL, PARCIAL
}

entity RecepcionDeCompra {
	noDeRecibo String required,
    fechaDeRecepcion LocalDate required,
    tipo TipoDeRecepcionDeCompra required,
    notas String
}

entity DetalleDeRecepcionDeCompra {
	cantidadOrdenada Integer required min(0),
    cantidadRecibida Integer required min(0),
    precio Double required min(0),
    noDeLote String required,
    fechaDeVencimiento LocalDate required
}

enum TipoDeMovimiento {
	INGRESO, EGRESO, CORRECCION
}

entity Inventario {
	fecha LocalDate required,
    cantidad Integer required,
    tipoDeMovimiento TipoDeMovimiento required,
    precio Double required min(0),
    detalles String
}




relationship OneToMany {
	Proveedor{producto} 
    to Producto {proveedor(nombre) required} 
}

relationship OneToMany {
	PresentacionDeProducto{producto} 
    to Producto{presentacion(nombre) required}
}

relationship OneToMany {
	OrdenDeCompra{detalleDeCompra} 
    to DetalleDeCompra{ordenDeCompra(id) required}
}

relationship OneToMany {
	Producto{detalleDeCompra} 
    to DetalleDeCompra{producto(nombre) required}
}

relationship OneToMany {
	Proveedor{ordenDeCompra}
    to OrdenDeCompra{proveedor(nombre) required}
}

relationship OneToMany {
	Producto{inventario} 
    to Inventario{producto(nombre) required}
}

relationship OneToMany {
	OrdenDeCompra{recepcionDeCompra}
    to RecepcionDeCompra{ordenDeCompra(id) required}
}

relationship OneToMany {
	Producto{detalleDeRecepcionDeCompra}
	to DetalleDeRecepcionDeCompra{producto(nombre) required}
}

relationship OneToMany {
	RecepcionDeCompra{detalleDeRecepcionDeCompra}
    to DetalleDeRecepcionDeCompra{recepcionDeCompra(id) required}
}

service all with serviceClass except PresentacionDeProducto
paginate all with pagination
search all with elasticsearch